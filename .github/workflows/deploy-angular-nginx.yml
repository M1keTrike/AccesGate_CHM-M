name: Deploy Angular to Nginx Container on EC2

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Clonar el repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instalar Node.js y Angular CLI
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3Ô∏è‚É£ Instalar dependencias
      - name: Install dependencies
        run: |
          cd Access-Gate-APP/Access-Gate
          npm ci

      # 4Ô∏è‚É£ Construir la aplicaci√≥n Angular
      - name: Build Angular app
        run: |
          cd Access-Gate-APP/Access-Gate
          npm run build -- --configuration=production

      # 5Ô∏è‚É£ **Verificar que `dist/` se gener√≥ correctamente**
      - name: Debug Build Output
        run: |
          if [ ! -d "Access-Gate-APP/Access-Gate/dist/access-gate/browser/" ]; then
            echo "‚ùå ERROR: El directorio de build no existe"
            exit 1
          fi
          ls -l Access-Gate-APP/Access-Gate/dist/access-gate/browser/

      # 6Ô∏è‚É£ **Eliminar archivos antiguos en EC2 SOLO si hay un nuevo build**
      - name: Remove old files on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            if [ -d "/var/www/angular-app" ]; then
              sudo rm -rf /var/www/angular-app/*
              echo "‚úÖ Archivos antiguos eliminados"
            else
              echo "‚ö†Ô∏è Advertencia: El directorio /var/www/angular-app no existe. Se crear√°."
              sudo mkdir -p /var/www/angular-app
            fi

      # 7Ô∏è‚É£ **Subir archivos a EC2 usando `rsync` en lugar de `scp`**
      - name: Upload dist folder to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "Access-Gate-APP/Access-Gate/dist/access-gate/browser/*"
          target: "/var/www/angular-app/"
          strip_components: 3  # Asegura que solo se copien los archivos sin los directorios padres

      # 8Ô∏è‚É£ **Asegurar permisos correctos para Nginx**
      - name: Fix Permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo chmod -R 755 /var/www/angular-app
            sudo chown -R www-data:www-data /var/www/angular-app
            echo "‚úÖ Permisos corregidos"

      # 9Ô∏è‚É£ **Verificar que los archivos existen en el servidor antes de reiniciar Nginx**
      - name: Check Deployment Files on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            if [ ! -f "/var/www/angular-app/index.html" ]; then
              echo "‚ùå ERROR: index.html no se encuentra en /var/www/angular-app"
              exit 1
            fi
            echo "‚úÖ index.html encontrado. Todo listo para reiniciar Nginx."

      # üîü **Reiniciar el contenedor Nginx SOLO si todo est√° bien**
      - name: Restart Nginx Container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            docker restart angular-nginx
            echo "‚úÖ Nginx reiniciado exitosamente"
